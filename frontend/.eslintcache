[{"E:\\GitHub\\MyProject\\frontend\\src\\index.js":"1","E:\\GitHub\\MyProject\\frontend\\src\\reportWebVitals.js":"2","E:\\GitHub\\MyProject\\frontend\\src\\App.js":"3","E:\\GitHub\\MyProject\\frontend\\src\\categories\\index.js":"4","E:\\GitHub\\MyProject\\frontend\\src\\region\\index.js":"5","E:\\GitHub\\MyProject\\frontend\\src\\orders\\index.js":"6","E:\\GitHub\\MyProject\\frontend\\src\\customers\\index.js":"7","E:\\GitHub\\MyProject\\frontend\\src\\products\\index.js":"8","E:\\GitHub\\MyProject\\frontend\\src\\employees\\index.js":"9","E:\\GitHub\\MyProject\\frontend\\src\\shippers\\index.js":"10","E:\\GitHub\\MyProject\\frontend\\src\\supplier\\index.js":"11","E:\\GitHub\\MyProject\\frontend\\src\\orderDetails\\index.js":"12","E:\\GitHub\\MyProject\\frontend\\src\\region\\FormInput.js":"13","E:\\GitHub\\MyProject\\frontend\\src\\orders\\FormInput.js":"14","E:\\GitHub\\MyProject\\frontend\\src\\orders\\TBContent.js":"15","E:\\GitHub\\MyProject\\frontend\\src\\customers\\TBContent.js":"16","E:\\GitHub\\MyProject\\frontend\\src\\customers\\FormInput.js":"17","E:\\GitHub\\MyProject\\frontend\\src\\products\\TBContent.js":"18","E:\\GitHub\\MyProject\\frontend\\src\\products\\FormInput.js":"19","E:\\GitHub\\MyProject\\frontend\\src\\employees\\TBContent.js":"20","E:\\GitHub\\MyProject\\frontend\\src\\employees\\FormInput.js":"21","E:\\GitHub\\MyProject\\frontend\\src\\shippers\\TBContent.js":"22","E:\\GitHub\\MyProject\\frontend\\src\\shippers\\FormInput.js":"23","E:\\GitHub\\MyProject\\frontend\\src\\supplier\\TBContent.js":"24","E:\\GitHub\\MyProject\\frontend\\src\\orderDetails\\TBContent.js":"25","E:\\GitHub\\MyProject\\frontend\\src\\supplier\\FormInput.js":"26","E:\\GitHub\\MyProject\\frontend\\src\\orderDetails\\FormInput.js":"27","E:\\GitHub\\MyProject\\frontend\\src\\categories\\FormInput.js":"28","E:\\GitHub\\MyProject\\frontend\\src\\region\\TBContent.js":"29","E:\\GitHub\\MyProject\\frontend\\src\\categories\\TBContent.js":"30","E:\\GitHub\\MyProject\\frontend\\src\\service\\crud.js":"31","E:\\GitHub\\MyProject\\frontend\\src\\service\\http-common.js":"32","E:\\GitHub\\MyProject\\frontend\\src\\Home\\index.js":"33"},{"size":563,"mtime":1611300858928,"results":"34","hashOfConfig":"35"},{"size":375,"mtime":1611300858934,"results":"36","hashOfConfig":"35"},{"size":3484,"mtime":1611377257990,"results":"37","hashOfConfig":"35"},{"size":1437,"mtime":1611371715353,"results":"38","hashOfConfig":"35"},{"size":1432,"mtime":1611368694231,"results":"39","hashOfConfig":"35"},{"size":1430,"mtime":1611373537796,"results":"40","hashOfConfig":"35"},{"size":1437,"mtime":1611372268006,"results":"41","hashOfConfig":"35"},{"size":1430,"mtime":1611373944431,"results":"42","hashOfConfig":"35"},{"size":1434,"mtime":1611372779238,"results":"43","hashOfConfig":"35"},{"size":1429,"mtime":1611370884517,"results":"44","hashOfConfig":"35"},{"size":1432,"mtime":1611374279516,"results":"45","hashOfConfig":"35"},{"size":1440,"mtime":1611373133641,"results":"46","hashOfConfig":"35"},{"size":3683,"mtime":1611378697352,"results":"47","hashOfConfig":"35"},{"size":8478,"mtime":1611378697352,"results":"48","hashOfConfig":"35"},{"size":3658,"mtime":1611373735554,"results":"49","hashOfConfig":"35"},{"size":3278,"mtime":1611376112066,"results":"50","hashOfConfig":"35"},{"size":6167,"mtime":1611378697353,"results":"51","hashOfConfig":"35"},{"size":3280,"mtime":1611374240993,"results":"52","hashOfConfig":"35"},{"size":6908,"mtime":1611378697352,"results":"53","hashOfConfig":"35"},{"size":3877,"mtime":1611372935308,"results":"54","hashOfConfig":"35"},{"size":7630,"mtime":1611378697352,"results":"55","hashOfConfig":"35"},{"size":2566,"mtime":1611371321994,"results":"56","hashOfConfig":"35"},{"size":3862,"mtime":1611378697522,"results":"57","hashOfConfig":"35"},{"size":3388,"mtime":1611374365114,"results":"58","hashOfConfig":"35"},{"size":2864,"mtime":1611373228371,"results":"59","hashOfConfig":"35"},{"size":6246,"mtime":1611378697522,"results":"60","hashOfConfig":"35"},{"size":5687,"mtime":1611378697522,"results":"61","hashOfConfig":"35"},{"size":4181,"mtime":1611378750921,"results":"62","hashOfConfig":"35"},{"size":2469,"mtime":1611373237243,"results":"63","hashOfConfig":"35"},{"size":2665,"mtime":1611371983428,"results":"64","hashOfConfig":"35"},{"size":5221,"mtime":1611300858935,"results":"65","hashOfConfig":"35"},{"size":187,"mtime":1611300858935,"results":"66","hashOfConfig":"35"},{"size":2385,"mtime":1611378231016,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"e3w8vb",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\GitHub\\MyProject\\frontend\\src\\index.js",[],["145","146"],"E:\\GitHub\\MyProject\\frontend\\src\\reportWebVitals.js",[],"E:\\GitHub\\MyProject\\frontend\\src\\App.js",["147"],"E:\\GitHub\\MyProject\\frontend\\src\\categories\\index.js",["148"],"E:\\GitHub\\MyProject\\frontend\\src\\region\\index.js",["149"],"import CRUD from \"../service/crud\";\r\nimport React from \"react\";\r\nimport TBContent from \"./TBContent\";\r\nimport FormInput from \"./FormInput\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\nfunction Regions() {\r\n    const [listItems, setListItems] = React.useState([]);\r\n    const [status, setStatus] = React.useState(false);\r\n    const [selectItem, setSelectItem] = React.useState(null);\r\n    const notifyData = () => {\r\n        CRUD.getAllReg().then((res) => {\r\n            setListItems(res.data.data);\r\n            console.log(listItems);\r\n            setStatus(false);\r\n        });\r\n    };\r\n    React.useEffect(() => {\r\n        notifyData();\r\n    }, [status]);\r\n\r\n    const onSelectItem = (item) => {\r\n        setSelectItem(item);\r\n    }\r\n    const onChangeStatus = (status) => {\r\n        setStatus(status);\r\n    }\r\n\r\n    const [modal, setModal] = React.useState(false);\r\n\r\n    return (\r\n        <Container fluid={true}>\r\n            <Row>\r\n                <Col xs=\"12\">\r\n                    <TBContent setModal = {setModal} onSelectItem = {onSelectItem} items={listItems} onChangeStatus={onChangeStatus} />\r\n                </Col>\r\n                <Col xs=\"0\">\r\n                    <FormInput modal = {modal} setModal = {setModal} onSelectItem = {onSelectItem} selectItem = {selectItem} onChangeStatus={onChangeStatus} />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n}\r\nexport default Regions;","E:\\GitHub\\MyProject\\frontend\\src\\orders\\index.js",["150"],"E:\\GitHub\\MyProject\\frontend\\src\\customers\\index.js",["151"],"E:\\GitHub\\MyProject\\frontend\\src\\products\\index.js",["152"],"E:\\GitHub\\MyProject\\frontend\\src\\employees\\index.js",["153"],"E:\\GitHub\\MyProject\\frontend\\src\\shippers\\index.js",["154"],"E:\\GitHub\\MyProject\\frontend\\src\\supplier\\index.js",["155"],"E:\\GitHub\\MyProject\\frontend\\src\\orderDetails\\index.js",["156"],"E:\\GitHub\\MyProject\\frontend\\src\\region\\FormInput.js",["157"],"import React, { useEffect } from 'react';\r\nimport CRUD from '../service/crud';\r\n\r\nimport { Button, Form, FormGroup, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\n\r\nfunction FormInput(props) {\r\n\r\n    var { onChangeStatus } = props;\r\n    const { onSelectItem } = props;\r\n    const { selectItem } = props;\r\n    const [status, setStatus] = React.useState(false);\r\n    const [postData, setPostData] = React.useState({\r\n        region_id: \"\",\r\n        region_description: \"\",\r\n    });\r\n\r\n    const { modal } = props;\r\n    const { setModal } = props;\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const df = {\r\n        region_id: \"\",\r\n        region_description: \"\",\r\n    }\r\n    function onChangeData(e) {\r\n        e.preventDefault();\r\n        var name = e.target.name;\r\n        var data = { ...postData, }\r\n        data[name] = e.target.value;\r\n        setPostData(data);\r\n    }\r\n\r\n    function handleOnClickOK(e) {\r\n        e.preventDefault();\r\n        console.log(postData);\r\n        if (selectItem === null) {\r\n            CRUD.insertReg(postData).then((res) => {\r\n                if (res.data.message === \"Insert Success!\") {\r\n                    toast('Thêm thành công !');\r\n                    setModal(false);\r\n                    onChangeStatus(true);\r\n                    setPostData(df);\r\n                    setStatus(true);\r\n\r\n\r\n                } else {\r\n                    toast('Thêm thất bại !');\r\n                    setModal(false);\r\n                }\r\n\r\n            }).catch((err) => {\r\n                toast(err);\r\n                setModal(false);\r\n            });\r\n        } else {\r\n            CRUD.updateReg(postData).then(res => {\r\n\r\n                if (res.data.message === \"Update Success !\") {\r\n                    toast('Cập nhập thành công !');\r\n                    setModal(false);\r\n                    onChangeStatus(true);\r\n                    onSelectItem(null);\r\n                    setPostData(df);\r\n                    setStatus(true);\r\n\r\n                } else {\r\n                    toast('Cập nhập thất bại !');\r\n                    setModal(false);\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n    const notifyData = () => {\r\n        setStatus(false);\r\n        if (selectItem === null) {\r\n\r\n        } else {\r\n            setPostData(selectItem);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        notifyData();\r\n    }, [status, selectItem])\r\n\r\n    return (\r\n        <div style={{ 'position': 'relative' }}>\r\n            <button className='btnADD' onClick={toggle} >➕</button>\r\n            <Modal isOpen={modal} toggle={toggle} >\r\n                <ModalHeader toggle={toggle}>Form</ModalHeader>\r\n                <ModalBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" id='id' value={postData?.region_id} name=\"region_id\" placeholder=\"Region ID\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.region_description} name=\"region_description\" placeholder=\"Region Description\" />\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={handleOnClickOK}>OK</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default FormInput;","E:\\GitHub\\MyProject\\frontend\\src\\orders\\FormInput.js",["158","159"],"import React, { useEffect } from 'react';\r\nimport CRUD from '../service/crud';\r\nimport { Button, Form, FormGroup, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\nfunction FormInput(props) {\r\n    var { onChangeStatus } = props;\r\n    const { onSelectItem } = props;\r\n    const { selectItem } = props;\r\n    const [status, setStatus] = React.useState(false);\r\n    const [dataCustomer, setDataCustomer] = React.useState([]);\r\n    const [dataEmployees, setDataEmployees] = React.useState([]);\r\n    const [dataShiper, setDataShiper] = React.useState([]);\r\n    const [postData, setPostData] = React.useState({\r\n        order_id: \"\",\r\n        customer_id: \"\",\r\n        employee_id: \"\",\r\n        order_date: \"\",\r\n        required_date: \"\",\r\n        shipped_date: \"\",\r\n        ship_via: \"\",\r\n        freight: \"\",\r\n        ship_name: \"\",\r\n        ship_address: \"\",\r\n        ship_city: \"\",\r\n        ship_region: \"\",\r\n        ship_postal_code: \"\",\r\n        ship_country: \"\"\r\n    });\r\n    const { modal } = props;\r\n    const { setModal } = props;\r\n    const toggle = () => setModal(!modal);\r\n    const df = {\r\n        order_id: \"\",\r\n        customer_id: \"\",\r\n        employee_id: \"\",\r\n        order_date: \"\",\r\n        required_date: \"\",\r\n        shipped_date: \"\",\r\n        ship_via: \"\",\r\n        freight: \"\",\r\n        ship_name: \"\",\r\n        ship_address: \"\",\r\n        ship_city: \"\",\r\n        ship_region: \"\",\r\n        ship_postal_code: \"\",\r\n        ship_country: \"\"\r\n    }\r\n    function onChangeData(e) {\r\n        e.preventDefault();\r\n        var name = e.target.name;\r\n        var data = { ...postData, }\r\n        console.log(e.target.value);\r\n        data[name] = e.target.value;\r\n        setPostData(data);\r\n    }\r\n\r\n    function handleOnClickOK(e) {\r\n        e.preventDefault();\r\n        console.log(postData);\r\n        if (selectItem === null) {\r\n            CRUD.insertOrder(postData).then((res) => {\r\n                console.log(res.data.message);\r\n                if (res.data.message == \"Insert Success!\") {\r\n                    toast('Thêm thành công !');\r\n                    setModal(false);\r\n                    onChangeStatus(true);\r\n                    setPostData(df);\r\n                    setStatus(true);\r\n                } else {\r\n                    toast('Thêm thất bại !');\r\n                    setModal(false);\r\n                }\r\n\r\n            }).catch((err) => {\r\n                toast(err);\r\n                setModal(false);\r\n            });\r\n        } else {\r\n            CRUD.updateOrder(postData).then(res => {\r\n                if (res.data.message === \"Update Success !\") {\r\n                    toast('Cập nhập thành công !');\r\n                    setModal(false);\r\n                    onChangeStatus(true);\r\n                    onSelectItem(null);\r\n                    setPostData(df);\r\n                    setStatus(true);\r\n                } else {\r\n                    toast('Cập nhập thất bại !');\r\n                    setModal(false);\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    const notifyData = () => {\r\n        setStatus(false);\r\n        // get Customer\r\n        CRUD.getAllCust().then(res => {\r\n            setDataCustomer(res.data.data);\r\n        });\r\n        // get Employees\r\n        CRUD.getAllEmp().then(res => {\r\n            setDataEmployees(res.data.data);\r\n        });\r\n        // get Shiper\r\n        CRUD.getAllShip().then(res => {\r\n            setDataShiper(res.data.data);\r\n        });\r\n\r\n\r\n        if (selectItem === null) {\r\n\r\n        } else {\r\n            setPostData(selectItem);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        notifyData();\r\n    }, [status, selectItem])\r\n\r\n    return (\r\n        <div style={{ 'position': 'relative' }}>\r\n            <button className='btnADD' onClick={toggle} >➕</button>\r\n            <Modal isOpen={modal} toggle={toggle} >\r\n                <ModalHeader toggle={toggle}>Form</ModalHeader>\r\n                <ModalBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Input id=\"id\" type=\"text\" value={postData?.order_id} placeholder=\"ID\" name=\"order_id\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n\r\n                            <Input type=\"select\" onChange={onChangeData} name=\"customer_id\" >\r\n                                <option>Customer ID</option>\r\n                                {\r\n                                    dataCustomer.map(item => (\r\n                                        <option>{item.customer_id}</option>\r\n                                    ))\r\n                                }\r\n                            </Input>\r\n\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"select\" onChange={onChangeData} name=\"employee_id\" >\r\n                                <option>Employees ID</option>\r\n                                {\r\n                                    dataEmployees.map(item => (\r\n                                        <option>{item.employee_id}</option>\r\n                                    ))\r\n                                }\r\n                            </Input>\r\n\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"order_date\" value={postData?.order_date} placeholder=\"Order Date\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.required_date} name=\"required_date\" placeholder=\"Required Date\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"shipped_date\" value={postData?.shipped_date} placeholder=\"Ship Date\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"select\" onChange={onChangeData} name=\"ship_via\" >\r\n                                <option>Shipper ID</option>\r\n                                {\r\n                                    dataShiper.map(item => (\r\n                                        <option>{item.shipper_id}</option>\r\n                                    ))\r\n                                }\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"freight\" value={postData?.freight} placeholder=\"Freight\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.ship_name} name=\"ship_name\" placeholder=\"Ship Name\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"ship_address\" value={postData?.ship_address} placeholder=\"Ship Address\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.ship_city} name=\"ship_city\" placeholder=\"Ship City\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"ship_region\" value={postData?.ship_region} placeholder=\"Ship Region\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.ship_postal_code} name=\"ship_postal_code\" placeholder=\"Postal Code\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.ship_country} name=\"ship_country\" placeholder=\"Ship Country\" />\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={handleOnClickOK}>OK</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default FormInput;","E:\\GitHub\\MyProject\\frontend\\src\\orders\\TBContent.js",[],"E:\\GitHub\\MyProject\\frontend\\src\\customers\\TBContent.js",[],"E:\\GitHub\\MyProject\\frontend\\src\\customers\\FormInput.js",["160"],"import React, { useEffect } from 'react';\r\nimport CRUD from '../service/crud';\r\nimport { Button, Form, FormGroup, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\nfunction FormInput(props) {\r\n    var { onChangeStatus } = props;\r\n    const { onSelectItem } = props;\r\n    const { selectItem } = props;\r\n    const [status, setStatus] = React.useState(false);\r\n    const [postData, setPostData] = React.useState({\r\n        customer_id: \"\",\r\n        company_name: \"\",\r\n        contact_name: \"\",\r\n        contact_title: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        region: \"\",\r\n        postal_code: \"\",\r\n        country: \"\",\r\n        phone: \"\",\r\n        fax: \"\",\r\n    });\r\n    function onChangeData(e) {\r\n        e.preventDefault();\r\n        var name = e.target.name;\r\n        var data = { ...postData, }\r\n        data[name] = e.target.value;\r\n        setPostData(data);\r\n    }\r\n    const { modal } = props;\r\n    const { setModal } = props;\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const df = {\r\n        customer_id: \"\",\r\n        company_name: \"\",\r\n        contact_name: \"\",\r\n        contact_title: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        region: \"\",\r\n        postal_code: \"\",\r\n        country: \"\",\r\n        phone: \"\",\r\n        fax: \"\",\r\n    }\r\n\r\n    function handleOnClickOK(e) {\r\n        e.preventDefault();\r\n        console.log(postData);\r\n        if (postData.customer_id === \"\" || postData.customer_id.length > 5) {\r\n            alert(\"Vui lòng nhập đúng Customer ID\");\r\n            return;\r\n        }\r\n        if (selectItem === null) {\r\n            CRUD.insertCust(postData).then((res) => {\r\n                if (res.data.message === 'Insert Success!') {\r\n                    toast('Thêm thành công !');\r\n                    setModal(false);\r\n                    onChangeStatus(true);\r\n                    setPostData(df);\r\n                    setStatus(true);\r\n                } else {\r\n                    toast('Thêm thất bại !');\r\n                    setModal(false);\r\n                }\r\n\r\n            }).catch((err) => {\r\n                toast(err);\r\n                setModal(false);\r\n            });\r\n        } else {\r\n            CRUD.updateCust(postData).then(res => {\r\n                if (res.data.message === \"Update Success !\") {\r\n                    toast('Cập nhập thành công !');\r\n                    setModal(false);\r\n                    onChangeStatus(true);\r\n                    onSelectItem(null);\r\n                    setPostData(df);\r\n                    setStatus(true);\r\n                } else {\r\n                    toast('Cập nhập thất bại !');\r\n                    setModal(false);\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n    const notifyData = () => {\r\n        setStatus(false);\r\n        if (selectItem === null) {\r\n\r\n        } else {\r\n            setPostData(selectItem);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        notifyData();\r\n    }, [status, selectItem])\r\n\r\n    return (\r\n        <div style={{ 'position': 'relative' }}>\r\n            <button className='btnADD' onClick={toggle} >📝</button>\r\n            <Modal isOpen={modal} toggle={toggle} >\r\n                <ModalHeader toggle={toggle}>Form</ModalHeader>\r\n                <ModalBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Input id='id' type=\"text\" onChange={onChangeData} value={postData?.customer_id} name=\"customer_id\" placeholder=\"ID\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"company_name\" value={postData?.company_name} placeholder=\"Company Name\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.contact_name} name=\"contact_name\" placeholder=\"Contact Name\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.contact_title} name=\"contact_title\" placeholder=\"Contact Title\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"address\" value={postData?.address} placeholder=\"Adress\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"city\" value={postData?.city} placeholder=\"City\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"region\" value={postData?.region} placeholder=\"Region\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"postal_code\" value={postData?.postal_code} placeholder=\"Postal Code\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"country\" value={postData?.country} placeholder=\"Country\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"phone\" value={postData?.phone} placeholder=\"Phone\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"fax\" value={postData?.fax} placeholder=\"Fax\" />\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={handleOnClickOK}>OK</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default FormInput;","E:\\GitHub\\MyProject\\frontend\\src\\products\\TBContent.js",[],"E:\\GitHub\\MyProject\\frontend\\src\\products\\FormInput.js",["161"],"import React, { useEffect } from 'react';\r\nimport CRUD from '../service/crud';\r\nimport { Button, Form, FormGroup, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\nfunction FormInput(props) {\r\n    var { onChangeStatus } = props;\r\n    const { onSelectItem } = props;\r\n    const { selectItem } = props;\r\n    const [status, setStatus] = React.useState(false);\r\n    const [dataSupplier, setDataSupplier] = React.useState([]);\r\n    const [dataCategories, setDataCategories] = React.useState([]);\r\n    const [postData, setPostData] = React.useState({\r\n        product_id: \"\",\r\n        product_name: \"\",\r\n        supplier_id: \"\",\r\n        category_id: \"\",\r\n        quantity_per_unit: \"\",\r\n        unit_price: \"\",\r\n        units_in_stock: \"\",\r\n        units_on_order: \"\",\r\n        reorder_level: \"\",\r\n        discontinued: \"\"\r\n\r\n    });\r\n    const { modal } = props;\r\n    const { setModal } = props;\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const df = {\r\n        product_id: \"\",\r\n        product_name: \"\",\r\n        supplier_id: \"\",\r\n        category_id: \"\",\r\n        quantity_per_unit: \"\",\r\n        unit_price: \"\",\r\n        units_in_stock: \"\",\r\n        units_on_order: \"\",\r\n        reorder_level: \"\",\r\n        discontinued: \"\"\r\n    }\r\n    function onChangeData(e) {\r\n        e.preventDefault();\r\n        var name = e.target.name;\r\n        var data = { ...postData, }\r\n        data[name] = e.target.value;\r\n        setPostData(data);\r\n    }\r\n\r\n    function handleOnClickOK(e) {\r\n        e.preventDefault();\r\n        console.log(postData);\r\n        if (selectItem === null) {\r\n            CRUD.insertPro(postData).then((res) => {\r\n                if (res.data.message === \"Insert Success!\") {\r\n                    toast('Thêm thành công !');\r\n                    setModal(false);\r\n                    onChangeStatus(true);\r\n                    setPostData(df);\r\n                    setStatus(true);\r\n                } else {\r\n                    toast('Thêm thất bại !');\r\n                    setModal(false);\r\n                }\r\n\r\n            }).catch((err) => {\r\n                toast(err);\r\n                setModal(false);\r\n            });\r\n        } else {\r\n            CRUD.updatePro(postData).then(res => {\r\n                if (res.data.message === \"Update Success !\") {\r\n                    toast('Cập nhập thành công !');\r\n                    setModal(false);\r\n                    onChangeStatus(true);\r\n                    onSelectItem(null);\r\n                    setPostData(df);\r\n                    setStatus(true);\r\n                } else {\r\n                    toast('Cập nhập thất bại !');\r\n                    setModal(false);\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    const notifyData = () => {\r\n        setStatus(false);\r\n        // get Categories\r\n        CRUD.getAllCate().then(res => {\r\n            setDataCategories(res.data.data);\r\n        });\r\n        // get Supplier\r\n        CRUD.getAllSup().then(res => {\r\n            setDataSupplier(res.data.data);\r\n        });\r\n\r\n\r\n        if (selectItem === null) {\r\n\r\n        } else {\r\n            setPostData(selectItem);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        notifyData();\r\n    }, [status, selectItem])\r\n\r\n    return (\r\n        <div style={{ 'position': 'relative' }}>\r\n            <button className='btnADD' onClick={toggle} >ADD</button>\r\n            <Modal isOpen={modal} toggle={toggle} >\r\n                <ModalHeader toggle={toggle}>Form</ModalHeader>\r\n                <ModalBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Input id=\"id\" type=\"text\" value={postData?.product_id} placeholder=\"ID\" name=\"product_id\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.product_name} name=\"product_name\" placeholder=\"Description\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"select\" onChange={onChangeData} name=\"supplier_id\" >\r\n                                <option>Supplier ID</option>\r\n                                {\r\n                                    dataSupplier.map(item => (\r\n                                        <option>{item.supplier_id}</option>\r\n                                    ))\r\n                                }\r\n                            </Input>\r\n\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"select\" onChange={onChangeData} name=\"category_id\" >\r\n                                <option>Category ID</option>\r\n                                {\r\n                                    dataCategories.map(item => (\r\n                                        <option>{item.category_id}</option>\r\n                                    ))\r\n                                }\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.quantity_per_unit} name=\"quantity_per_unit\" placeholder=\"quantity per unit\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.unit_price} name=\"unit_price\" placeholder=\"unit price\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.units_in_stock} name=\"units_in_stock\" placeholder=\"units in stock\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"units_on_order\" value={postData?.units_on_order} placeholder=\"units on order\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.reorder_level} name=\"reorder_level\" placeholder=\"reorder level\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.discontinued} name=\"discontinued\" placeholder=\"Discontinued\" />\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={handleOnClickOK}>OK</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default FormInput;\r\n","E:\\GitHub\\MyProject\\frontend\\src\\employees\\TBContent.js",[],"E:\\GitHub\\MyProject\\frontend\\src\\employees\\FormInput.js",["162"],"import React, { useEffect } from 'react';\r\nimport CRUD from '../service/crud';\r\nimport { Button, Form, FormGroup, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\nfunction FormInput(props) {\r\n    var { onChangeStatus } = props;\r\n    const { onSelectItem } = props;\r\n    const { selectItem } = props;\r\n    const [status, setStatus] = React.useState(false);\r\n    const [postData, setPostData] = React.useState({\r\n        employee_id: \"\",\r\n        last_name: \"\",\r\n        first_name: \"\",\r\n        title: \"\",\r\n        title_of_courtesy: \"\",\r\n        birth_date: \"\",\r\n        hire_date: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        region: \"\",\r\n        postal_code: \"\",\r\n        country: \"\",\r\n        home_phone: \"\",\r\n        extension: \"\",\r\n        photo: \"\",\r\n        notes: \"\",\r\n        photo_path: \"\"\r\n    });\r\n\r\n    const { modal } = props;\r\n    const { setModal } = props;\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const df = {\r\n        employee_id: \"\",\r\n        last_name: \"\",\r\n        first_name: \"\",\r\n        title: \"\",\r\n        title_of_courtesy: \"\",\r\n        birth_date: \"\",\r\n        hire_date: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        region: \"\",\r\n        postal_code: \"\",\r\n        country: \"\",\r\n        home_phone: \"\",\r\n        extension: \"\",\r\n        photo: \"\",\r\n        notes: \"\",\r\n        photo_path: \"\"\r\n    }\r\n    function onChangeData(e) {\r\n        e.preventDefault();\r\n        var name = e.target.name;\r\n        var data = { ...postData, }\r\n        data[name] = e.target.value;\r\n        setPostData(data);\r\n    }\r\n\r\n    function handleOnClickOK(e) {\r\n        e.preventDefault();\r\n        console.log(postData);\r\n        if (selectItem === null) {\r\n            CRUD.insertEmp(postData).then((res) => {\r\n                console.log(res.data.message);\r\n                if (res.data.message === \"Insert Success!\") {\r\n                    toast('Thêm thành công !');\r\n                    setModal(false);\r\n                    onChangeStatus(true);\r\n                    setPostData(df);\r\n                    setStatus(true);\r\n                } else {\r\n                    toast('Thêm thất bại !');\r\n                    setModal(false);\r\n                }\r\n\r\n            }).catch((err) => {\r\n                toast(err);\r\n                setModal(false);\r\n            });\r\n        } else {\r\n            CRUD.updateEmp(postData).then(res => {\r\n                if (res.data.message === \"Update Success !\") {\r\n                    toast('Cập nhập thành công !');\r\n                    setModal(false);\r\n                    onChangeStatus(true);\r\n                    onSelectItem(null);\r\n                    setPostData(df);\r\n                    setStatus(true);\r\n                } else {\r\n                    toast('Cập nhập thất bại !');\r\n                    setModal(false);\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    const notifyData = () => {\r\n        setStatus(false);\r\n        if (selectItem === null) {\r\n\r\n        } else {\r\n            setPostData(selectItem);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        notifyData();\r\n    }, [status, selectItem])\r\n\r\n    return (\r\n        <div style={{ 'position': 'relative' }}>\r\n            <button className='btnADD' onClick={toggle} >➕</button>\r\n            <Modal isOpen={modal} toggle={toggle} >\r\n                <ModalHeader toggle={toggle}>Form</ModalHeader>\r\n                <ModalBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Input id=\"id\" type=\"text\" value={postData?.employee_id} placeholder=\"ID\" name=\"employee_id\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"last_name\" value={postData?.last_name} placeholder=\"Last Name\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.first_name} name=\"first_name\" placeholder=\"Fist Name\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.title} name=\"title\" placeholder=\"Title\" />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.title_of_courtesy} placeholder=\"Title Of Courtesy\" name=\"title_of_courtesy\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"birth_date\" value={postData?.birth_date} placeholder=\"Birth Day\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.hire_date} name=\"hire_date\" placeholder=\"Hire Day\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.address} name=\"address\" placeholder=\"Adress\" />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.city} placeholder=\"City\" name=\"city\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"region\" value={postData?.region} placeholder=\"Region\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.postal_code} name=\"postal_code\" placeholder=\"Postal Code\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.country} name=\"country\" placeholder=\"Country\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.home_phone} placeholder=\"Home Phone\" name=\"home_phone\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"extension\" value={postData?.extension} placeholder=\"Extension\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.photo} name=\"photo\" placeholder=\"Photo\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.notes} name=\"notes\" placeholder=\"Notes\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.photo_path} name=\"photo_path\" placeholder=\"Photo Path\" />\r\n                        </FormGroup>\r\n\r\n                    </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={handleOnClickOK}>OK</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default FormInput;","E:\\GitHub\\MyProject\\frontend\\src\\shippers\\TBContent.js",[],"E:\\GitHub\\MyProject\\frontend\\src\\shippers\\FormInput.js",["163"],"import React, { useEffect } from 'react';\r\nimport CRUD from '../service/crud';\r\nimport { Button, Form, FormGroup, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\nfunction FormInput(props) {\r\n    var { onChangeStatus } = props;\r\n    const { onSelectItem } = props;\r\n    const { selectItem } = props;\r\n    const [status, setStatus] = React.useState(false);\r\n    const [postData, setPostData] = React.useState({\r\n        shipper_id: \"\",\r\n        company_name: \"\",\r\n        phone: \"\"\r\n    });\r\n\r\n    const { modal } = props;\r\n    const { setModal } = props;\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const df = {\r\n        shipper_id: \"\",\r\n        company_name: \"\",\r\n        phone: \"\"\r\n    }\r\n    function onChangeData(e) {\r\n        e.preventDefault();\r\n        var name = e.target.name;\r\n        var data = { ...postData, }\r\n        data[name] = e.target.value;\r\n        setPostData(data);\r\n    }\r\n\r\n    function handleOnClickOK(e) {\r\n        e.preventDefault();\r\n        console.log(postData);\r\n        if (selectItem === null) {\r\n            CRUD.insertShip(postData).then((res) => {\r\n                if (res.data.message === \"Insert Success!\") {\r\n                    toast('Thêm thành công !');\r\n                    onChangeStatus(true);\r\n                    setPostData(df);\r\n                    setStatus(true);\r\n                    setModal(false);\r\n                } else {\r\n                    toast('Thêm thất bại !');\r\n                }\r\n\r\n            }).catch((err) => {\r\n                toast(err);\r\nsetModal(false);\r\n                setModal(false);\r\n            });\r\n        } else {\r\n            CRUD.updateShip(postData).then(res => {\r\n                if (res.data.message === \"Update Success !\") {\r\n                    toast('Cập nhập thành công !');\r\n                    onChangeStatus(true);\r\n                    onSelectItem(null);\r\n                    setPostData(df);\r\n                    setStatus(true);\r\n                    setModal(false);\r\n                } else {\r\n                    toast('Cập nhập thất bại !');\r\n                    setModal(false);\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    const notifyData = () => {\r\n        setStatus(false);\r\n        if (selectItem === null) {\r\n\r\n        } else {\r\n            setPostData(selectItem);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        notifyData();\r\n    }, [status, selectItem])\r\n\r\n    return (\r\n        <div style={{'position' : 'relative'}}>\r\n            <button className = 'btnADD' onClick = {toggle} >ADD</button>\r\n            <Modal isOpen={modal} toggle={toggle} >\r\n                <ModalHeader toggle={toggle}>Form</ModalHeader>\r\n                <ModalBody>\r\n                <Form>\r\n                        <FormGroup>\r\n                            <Input id=\"id\" type=\"text\" value={postData?.shipper_id} placeholder=\"ID\" name=\"shipper_id\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"company_name\" value={postData?.company_name} placeholder=\"Company Name\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.phone} name=\"phone\" placeholder=\"Phone\" />\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={handleOnClickOK}>OK</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\nexport default FormInput;","E:\\GitHub\\MyProject\\frontend\\src\\supplier\\TBContent.js",[],"E:\\GitHub\\MyProject\\frontend\\src\\orderDetails\\TBContent.js",[],"E:\\GitHub\\MyProject\\frontend\\src\\supplier\\FormInput.js",["164"],"import React, { useEffect } from 'react';\r\nimport CRUD from '../service/crud';\r\nimport { Button, Form, FormGroup, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\nfunction FormInput(props) {\r\n    var { onChangeStatus } = props;\r\n    const { onSelectItem } = props;\r\n    const { selectItem } = props;\r\n    const [status, setStatus] = React.useState(false);\r\n    const [postData, setPostData] = React.useState({\r\n        supplier_id: \"\",\r\n        company_name: \"\",\r\n        contact_name: \"\",\r\n        contact_title: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        region: \"\",\r\n        postal_code: \"\",\r\n        country: \"\",\r\n        phone: \"\",\r\n        fax: \"\",\r\n        homepage: \"\"\r\n\r\n    });\r\n    const { modal } = props;\r\n    const { setModal } = props;\r\n    const toggle = () => setModal(!modal);\r\n    const df = {\r\n        supplier_id: \"\",\r\n        company_name: \"\",\r\n        contact_name: \"\",\r\n        contact_title: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        region: \"\",\r\n        postal_code: \"\",\r\n        country: \"\",\r\n        phone: \"\",\r\n        fax: \"\",\r\n        homepage: \"\"\r\n    }\r\n    function onChangeData(e) {\r\n        e.preventDefault();\r\n        var name = e.target.name;\r\n        var data = { ...postData, }\r\n        data[name] = e.target.value;\r\n        setPostData(data);\r\n    }\r\n\r\n    function handleOnClickOK(e) {\r\n        e.preventDefault();\r\n        console.log(postData);\r\n        if (selectItem === null) {\r\n            CRUD.insertSup(postData).then((res) => {\r\n                if (res.data.message === \"Insert Success!\") {\r\n                    toast('Thêm thành công !');\r\n                    setModal(false);\r\n                    onChangeStatus(true);\r\n                    setPostData(df);\r\n                    setStatus(true);\r\n                } else {\r\n                    toast('Thêm thất bại !');\r\n                    setModal(false);\r\n                }\r\n\r\n            }).catch((err) => {\r\n                toast(err);\r\n                setModal(false);\r\n            });\r\n        } else {\r\n            CRUD.updateSup(postData).then(res => {\r\n                if (res.data.message === \"Update Success !\") {\r\n                    toast('Cập nhập thành công !');\r\n                    setModal(false);\r\n                    onChangeStatus(true);\r\n                    onSelectItem(null);\r\n                    setPostData(df);\r\n                    setStatus(true);\r\n                } else {\r\n                    toast('Cập nhập thất bại !');\r\n                    setModal(false);\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    const notifyData = () => {\r\n        setStatus(false);\r\n        if (selectItem === null) {\r\n\r\n        } else {\r\n            setPostData(selectItem);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        notifyData();\r\n    }, [status, selectItem])\r\n\r\n    return (\r\n        <div style={{ 'position': 'relative' }}>\r\n            <button className='btnADD' onClick={toggle} >➕</button>\r\n            <Modal isOpen={modal} toggle={toggle} >\r\n                <ModalHeader toggle={toggle}>Form</ModalHeader>\r\n                <ModalBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Input id=\"id\" type=\"text\" value={postData?.supplier_id} placeholder=\"ID\" name=\"Supplier ID\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"company_name\" value={postData?.company_name} placeholder=\" Company Name \" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.contact_name} name=\"contact_name\" placeholder=\"Contact Name\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.contact_title} name=\"contact_title\" placeholder=\" Contact Title\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"address\" value={postData?.address} placeholder=\"Address\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.city} name=\"city\" placeholder=\"City\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.region} name=\"region\" placeholder=\"Region\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"postal_code\" value={postData?.postal_code} placeholder=\" Postal Code\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.country} name=\"country\" placeholder=\"Country\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.phone} name=\"phone\" placeholder=\"Phone\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"fax\" value={postData?.fax} placeholder=\"Fax\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.homepage} name=\"homepage\" placeholder=\"Homepage\" />\r\n                        </FormGroup>\r\n\r\n\r\n                    </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={handleOnClickOK}>OK</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default FormInput;","E:\\GitHub\\MyProject\\frontend\\src\\orderDetails\\FormInput.js",["165"],"import React, { useEffect } from 'react';\r\nimport CRUD from '../service/crud';\r\nimport { Button, Form, FormGroup, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\nfunction FormInput(props) {\r\n    var { onChangeStatus } = props;\r\n    const { onSelectItem } = props;\r\n    const { selectItem } = props;\r\n    const [status, setStatus] = React.useState(false);\r\n    const [dataorder, setDataOrder] = React.useState([]);\r\n    const [dataproducts, setDataProducts] = React.useState([]);\r\n    const [postData, setPostData] = React.useState({\r\n        order_details_id: \"\",\r\n        order_id: \"\",\r\n        product_id: \"\",\r\n        unit_price: \"\",\r\n        quantity: \"\",\r\n        discount: \"\"\r\n    });\r\n    const { modal } = props;\r\n    const { setModal } = props;\r\n    const toggle = () => setModal(!modal);\r\n    const df = {\r\n        order_details_id: \"\",\r\n        order_id: \"\",\r\n        product_id: \"\",\r\n        unit_price: \"\",\r\n        quantity: \"\",\r\n        discount: \"\"\r\n    }\r\n    function onChangeData(e) {\r\n        e.preventDefault();\r\n        var name = e.target.name;\r\n        var data = { ...postData, }\r\n        data[name] = e.target.value;\r\n        setPostData(data);\r\n    }\r\n\r\n    function handleOnClickOK(e) {\r\n        e.preventDefault();\r\n        console.log(postData);\r\n        if (selectItem === null) {\r\n            CRUD.insertOde(postData).then((res) => {\r\n                if (res.data.message === \"Insert Success!\") {\r\n                    toast('Thêm thành công !');\r\n                    setModal(false);\r\n                    onChangeStatus(true);\r\n                    setPostData(df);\r\n                    setStatus(true);\r\n                } else {\r\n                    toast('Thêm thất bại !');\r\n                    setModal(false);\r\n                }\r\n\r\n            }).catch((err) => {\r\n                toast(err);\r\n                setModal(false);\r\n            });\r\n        } else {\r\n            CRUD.updateOde(postData).then(res => {\r\n                if (res.data.message === \"Update Success !\") {\r\n                    toast('Cập nhập thành công !');\r\n                    setModal(false);\r\n                    onChangeStatus(true);\r\n                    onSelectItem(null);\r\n                    setPostData(df);\r\n                    setStatus(true);\r\n                } else {\r\n                    toast('Cập nhập thất bại !');\r\n                    setModal(false);\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    const notifyData = () => {\r\n        setStatus(false);\r\n        // get Order\r\n        CRUD.getAllOrder().then(res => {\r\n            setDataOrder(res.data.data);\r\n        });\r\n        // get Products\r\n        CRUD.getAllPro().then(res => {\r\n            setDataProducts(res.data.data);\r\n        });\r\n\r\n        if (selectItem === null) {\r\n\r\n        } else {\r\n            setPostData(selectItem);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        notifyData();\r\n    }, [status, selectItem])\r\n\r\n    return (\r\n        <div style={{ 'position': 'relative' }}>\r\n            <button className='btnADD' onClick={toggle} >➕</button>\r\n            <Modal isOpen={modal} toggle={toggle} >\r\n                <ModalHeader toggle={toggle}>Form</ModalHeader>\r\n                <ModalBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Input id=\"id\" type=\"text\" value={postData?.order_details_id} placeholder=\"ID\" name=\"order_details_id\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"select\" onChange={onChangeData} name=\"order_id\" >\r\n                                <option>Order ID</option>\r\n                                {\r\n                                    dataorder.map(item => (\r\n                                        <option>{item.order_id}</option>\r\n                                    ))\r\n                                }\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"select\" onChange={onChangeData} name=\"product_id\" >\r\n                                <option>Products ID</option>\r\n                                {\r\n                                    dataproducts.map(item => (\r\n                                        <option>{item.product_id}</option>\r\n                                    ))\r\n                                }\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} name=\"unit_price\" value={postData?.unit_price} placeholder=\"Unit Price\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.quantity} name=\"quantity\" placeholder=\" Quantity\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" onChange={onChangeData} value={postData?.discount} name=\"discount\" placeholder=\"Discount\" />\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={handleOnClickOK}>OK</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default FormInput;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","E:\\GitHub\\MyProject\\frontend\\src\\categories\\FormInput.js",["166"],"E:\\GitHub\\MyProject\\frontend\\src\\region\\TBContent.js",[],"E:\\GitHub\\MyProject\\frontend\\src\\categories\\TBContent.js",[],"E:\\GitHub\\MyProject\\frontend\\src\\service\\crud.js",["167"],"import HttpRequest from \"./http-common\";\r\n\r\nconst getAllCate = async () =>{\r\n    return await HttpRequest.get(\"http://localhost:8080/user/all_categories\");\r\n}\r\n\r\nconst insertCate = (data) => {\r\n    return HttpRequest.post(\"http://localhost:8080/insert_categories\", data);\r\n}\r\n\r\nconst delete_cate_by_id = (data) => {\r\n    return HttpRequest.delete(`http://localhost:8080/delete_categories/${data}`);\r\n}\r\n\r\nconst updateCate = (data) => {\r\n    return HttpRequest.put(\"http://localhost:8080/update_categories\", data);\r\n}\r\n\r\nconst getAllCust = async () =>{\r\n    return await HttpRequest.get(\"http://localhost:8080/user/all_customers\");\r\n}\r\n\r\nconst insertCust = (data) => {\r\n    return HttpRequest.post(\"http://localhost:8080/insert_customers\", data);\r\n}\r\n\r\nconst delete_cust_by_id = (data) => {\r\n    return HttpRequest.delete(`http://localhost:8080/delete_customers/${data}`);\r\n}\r\n\r\nconst updateCust = (data) => {\r\n    return HttpRequest.put(\"http://localhost:8080/update_customers\", data);\r\n}\r\n\r\nconst getAllReg = async () =>{\r\n    return await HttpRequest.get(\"http://localhost:8080/user/all_region\");\r\n}\r\n\r\nconst insertReg = (data) => {\r\n    return HttpRequest.post(\"http://localhost:8080/insert_region\", data);\r\n}\r\n\r\nconst delete_reg_by_id = (data) => {\r\n    return HttpRequest.delete(`http://localhost:8080/delete_region/${data}`);\r\n}\r\n\r\nconst updateReg = (data) => {\r\n    return HttpRequest.put(\"http://localhost:8080/update_region\", data);\r\n}\r\n\r\nconst getAllEmp = async () =>{\r\n    return await HttpRequest.get(\"http://localhost:8080/user/all_employees\");\r\n}\r\n\r\nconst insertEmp = (data) => {\r\n    return HttpRequest.post(\"http://localhost:8080/insert_employees\", data);\r\n}\r\n\r\nconst delete_emp_by_id = (data) => {\r\n    return HttpRequest.delete(`http://localhost:8080/delete_employees/${data}`);\r\n}\r\n\r\nconst updateEmp = (data) => {\r\n    return HttpRequest.put(\"http://localhost:8080/update_employees\", data);\r\n}\r\n\r\nconst getAllShip = async () =>{\r\n    return await HttpRequest.get(\"http://localhost:8080/user/all_shippers\");\r\n}\r\n\r\nconst insertShip  = (data) => {\r\n    return HttpRequest.post(\"http://localhost:8080/insert_shippers\", data);\r\n}\r\n\r\nconst delete_Ship_by_id = (data) => {\r\n    return HttpRequest.delete(`http://localhost:8080/delete_shippers/${data}`);\r\n}\r\n\r\nconst updateShip  = (data) => {\r\n    return HttpRequest.put(\"http://localhost:8080/update_shippers\", data);\r\n}\r\nconst getAllOrder = async () =>{\r\n    return await HttpRequest.get(\"http://localhost:8080/user/all_orders\");\r\n}\r\n\r\nconst insertOrder  = (data) => {\r\n    return HttpRequest.post(\"http://localhost:8080/insert_orders\", data);\r\n}\r\n\r\nconst delete_Order_by_id = (data) => {\r\n    return HttpRequest.delete(`http://localhost:8080/delete_orders/${data}`);\r\n}\r\n\r\nconst updateOrder  = (data) => {\r\n    return HttpRequest.put(\"http://localhost:8080/update_orders\", data);\r\n}\r\n\r\n       //    OderDetails //\r\n       const getAllOde = async () =>{\r\n        return await HttpRequest.get(\"http://localhost:8080/user/all_order_details\");\r\n    }\r\n    \r\n    const insertOde = (data) => {\r\n        return HttpRequest.post(\"http://localhost:8080/insert_order_details\", data);\r\n    }\r\n    \r\n    const delete_ode_by_id = (data) => {\r\n        return HttpRequest.delete(`http://localhost:8080/delete_order_details/${data}`);\r\n    }\r\n    \r\n    const updateOde = (data) => {\r\n        return HttpRequest.put(\"http://localhost:8080/update_order_details\", data);\r\n    }\r\n    \r\n            //    Product //\r\n    \r\n    const getAllPro = async () =>{\r\n        return await HttpRequest.get(\"http://localhost:8080/user/all_products\");\r\n    }\r\n    \r\n    const insertPro = (data) => {\r\n        return HttpRequest.post(\"http://localhost:8080/insert_products\", data);\r\n    }\r\n    \r\n    const delete_pro_by_id = (data) => {\r\n        return HttpRequest.delete(`http://localhost:8080/delete_products/${data}`);\r\n    }\r\n    \r\n    const updatePro = (data) => {\r\n        return HttpRequest.put(\"http://localhost:8080/update_products\", data);\r\n    }\r\n    \r\n                // Supplier //\r\n    \r\n    const getAllSup = async () =>{\r\n        return await HttpRequest.get(\"http://localhost:8080/user/all_suppliers\");\r\n    }\r\n    \r\n    const insertSup = (data) => {\r\n        return HttpRequest.post(\"http://localhost:8080/insert_suppliers\", data);\r\n    }\r\n    \r\n    const delete_sup_by_id = (data) => {\r\n        return HttpRequest.delete(`http://localhost:8080/delete_suppliers/${data}`);\r\n    }\r\n    \r\n    const updateSup = (data) => {\r\n        return HttpRequest.put(\"http://localhost:8080/update_suppliers\", data);\r\n    }\r\n                \r\n\r\nexport default { getAllCate , insertCate, delete_cate_by_id, updateCate,\r\n                 getAllCust, insertCust, delete_cust_by_id, updateCust,\r\n                 getAllReg, insertReg, delete_reg_by_id, updateReg,\r\n                 getAllEmp, insertEmp, delete_emp_by_id, updateEmp,\r\n                 getAllShip, insertShip, delete_Ship_by_id, updateShip,\r\n                 getAllOrder, insertOrder, delete_Order_by_id, updateOrder,\r\n                 getAllOde, insertOde, delete_ode_by_id, updateOde, \r\n                 getAllPro, insertPro, delete_pro_by_id, updatePro,\r\n                 getAllSup, insertSup, delete_sup_by_id, updateSup\r\n}","E:\\GitHub\\MyProject\\frontend\\src\\service\\http-common.js",[],"E:\\GitHub\\MyProject\\frontend\\src\\Home\\index.js",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":22,"column":9,"nodeType":"174","messageId":"175","endLine":22,"endColumn":16},{"ruleId":"176","severity":1,"message":"177","line":19,"column":8,"nodeType":"178","endLine":19,"endColumn":16,"suggestions":"179"},{"ruleId":"176","severity":1,"message":"177","line":19,"column":8,"nodeType":"178","endLine":19,"endColumn":16,"suggestions":"180"},{"ruleId":"176","severity":1,"message":"177","line":19,"column":8,"nodeType":"178","endLine":19,"endColumn":16,"suggestions":"181"},{"ruleId":"176","severity":1,"message":"177","line":19,"column":8,"nodeType":"178","endLine":19,"endColumn":16,"suggestions":"182"},{"ruleId":"176","severity":1,"message":"177","line":19,"column":8,"nodeType":"178","endLine":19,"endColumn":16,"suggestions":"183"},{"ruleId":"176","severity":1,"message":"177","line":19,"column":8,"nodeType":"178","endLine":19,"endColumn":16,"suggestions":"184"},{"ruleId":"176","severity":1,"message":"177","line":19,"column":8,"nodeType":"178","endLine":19,"endColumn":16,"suggestions":"185"},{"ruleId":"176","severity":1,"message":"177","line":19,"column":8,"nodeType":"178","endLine":19,"endColumn":16,"suggestions":"186"},{"ruleId":"176","severity":1,"message":"177","line":19,"column":8,"nodeType":"178","endLine":19,"endColumn":16,"suggestions":"187"},{"ruleId":"176","severity":1,"message":"188","line":90,"column":8,"nodeType":"178","endLine":90,"endColumn":28,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":65,"column":38,"nodeType":"192","messageId":"193","endLine":65,"endColumn":40},{"ruleId":"176","severity":1,"message":"188","line":125,"column":8,"nodeType":"178","endLine":125,"endColumn":28,"suggestions":"194"},{"ruleId":"176","severity":1,"message":"188","line":102,"column":8,"nodeType":"178","endLine":102,"endColumn":28,"suggestions":"195"},{"ruleId":"176","severity":1,"message":"188","line":112,"column":8,"nodeType":"178","endLine":112,"endColumn":28,"suggestions":"196"},{"ruleId":"176","severity":1,"message":"188","line":115,"column":8,"nodeType":"178","endLine":115,"endColumn":28,"suggestions":"197"},{"ruleId":"176","severity":1,"message":"188","line":85,"column":8,"nodeType":"178","endLine":85,"endColumn":28,"suggestions":"198"},{"ruleId":"176","severity":1,"message":"188","line":103,"column":8,"nodeType":"178","endLine":103,"endColumn":28,"suggestions":"199"},{"ruleId":"176","severity":1,"message":"188","line":103,"column":8,"nodeType":"178","endLine":103,"endColumn":28,"suggestions":"200"},{"ruleId":"176","severity":1,"message":"188","line":88,"column":8,"nodeType":"178","endLine":88,"endColumn":28,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":152,"column":1,"nodeType":"204","endLine":161,"endColumn":2},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"no-unused-vars","'styleli' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'notifyData'. Either include it or remove the dependency array.","ArrayExpression",["207"],["208"],["209"],["210"],["211"],["212"],["213"],["214"],["215"],"React Hook useEffect has a missing dependency: 'notifyData'. Either include it or remove the dependency array.",["216"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["217"],["218"],["219"],["220"],["221"],["222"],["223"],["224"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"225","fix":"227"},{"desc":"225","fix":"228"},{"desc":"225","fix":"229"},{"desc":"225","fix":"230"},{"desc":"225","fix":"231"},{"desc":"225","fix":"232"},{"desc":"225","fix":"233"},{"desc":"225","fix":"234"},{"desc":"235","fix":"236"},{"desc":"235","fix":"237"},{"desc":"235","fix":"238"},{"desc":"235","fix":"239"},{"desc":"235","fix":"240"},{"desc":"235","fix":"241"},{"desc":"235","fix":"242"},{"desc":"235","fix":"243"},{"desc":"235","fix":"244"},"Update the dependencies array to be: [notifyData, status]",{"range":"245","text":"246"},{"range":"247","text":"246"},{"range":"248","text":"246"},{"range":"249","text":"246"},{"range":"250","text":"246"},{"range":"251","text":"246"},{"range":"252","text":"246"},{"range":"253","text":"246"},{"range":"254","text":"246"},"Update the dependencies array to be: [status, selectItem, notifyData]",{"range":"255","text":"256"},{"range":"257","text":"256"},{"range":"258","text":"256"},{"range":"259","text":"256"},{"range":"260","text":"256"},{"range":"261","text":"256"},{"range":"262","text":"256"},{"range":"263","text":"256"},{"range":"264","text":"256"},[660,668],"[notifyData, status]",[656,664],[657,665],[659,667],[656,664],[658,666],[658,666],[657,665],[661,669],[2510,2530],"[status, selectItem, notifyData]",[3751,3771],[3055,3075],[3319,3339],[3230,3250],[2490,2510],[2938,2958],[3050,3070],[2588,2608]]